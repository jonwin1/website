[{"content":"My many attempts at creating a more optimal keyboard layout for my self. So far all of the layouts have been used on a normal TKL keyboard, but with the latest layouts the goal has been to create a layout that would work on a Charybdis by Bastard Keyboards. See the cover picture for how the keys have been moved around to make the latest layout work on a normal keyboard.\nThe layouts have been configured using KMonad which allows you to rebind all keys on almost any keyboard and add extra functionalities such as multiple layers and tap-hold buttions. My current layout is configured with KMonad through my NixOS configuration and can be seen here.\nBelow follows some of the different layouts I have tried and some thoughts about them. They are ordered with the most recent version at the top so to get the complete picture maybe start from the bottom.\nv4.5 My current layout with three layers:\nA normal layer with letters, numbers, etc. A shift layer with capital letters, symbols, etc. A third layer (called nav in the image) with arrow keys, media keys, symbols, F keys, etc. The modifier keys have been placed on the thumb keys and the symbols on the number keys closely resembles a normal US layout with some modification.\nThe upper left on each key is the normal layer, upper right is the shift layer, lower right is the third layer and lower left is if the key is held down. The keys M1, M2 and M3 are the mouse keys (left click, right click and middle click).\nv4.2 A slightly better thumb key layout but I tried something new with the symbols on the number keys which I didn\u0026rsquo;t like.\nv4.1 A more complete layout for the Charybdis. The main issue with this one is that I found that there are too many functions on the thumb keys and the numbers maybe don\u0026rsquo;t need to be in two places.\nv4.0 This is where I had found the Charybdis keyboard and got interested in maybe building one at some point. I am not going to make many comments about this layout since it is just a first draft that I didn\u0026rsquo;t use for long.\nI had an idea to place all brackets with opening and closing mirrored on the two halves inspired by The Primeagen, but ended up not liking that.\nv3.2 Here I switched to using the Miryoku KMonad layout with some modifications such as adding the keys å, ä and ö. I used this layout for multiple months and liked it, it would work very well for a keyboard like the 5 column Corne keyboard.\nThe reason that I switched from this layout is that I felt like I needed a few more keys because for example the letters ä and å are placed in a suboptimal position which gets annoying when typing in swedish. I also ended up deciding that I don\u0026rsquo;t want homerow mods because I end up with misclicks sometimes.\nBy this point I where really sold on the idea of thumb keys so moving some modifier keys to the thumbs could be a good idea and maybe reducing the number of layers if I have more keys available.\nv3.0 A half complete layout inspired by the Miryoku layout and the Miryoku KMonad project.\nv2.0 Some further improvements by trying some different placements of the backspace, return, tab and escape keys. Also quite a few changes to the numbers and symbols layers.\nv1.4 This layout solves the issue with the modifier keys by using homerow mods, a good idea that I used for a long time but didn\u0026rsquo;t end up liking in the end. This layout also adds another layer with the arrow keys for example and I started trying the colemak-dh layout for the letters.\nv1.0 This was the first layout I created by moving most of the symbols and numbers to a separate layer under the letters, this layer was accessed by holding the spacebar. The main issue with this was that keys such as backspace and escape are still difficult to reach and the modifier keys requires a lot of movement of the pinky finger.\n","permalink":"http://localhost:1313/posts/keyboard-layouts/","summary":"My many attempts at creating a more optimal keyboard layout for my self. So far all of the layouts have been used on a normal TKL keyboard, but with the latest layouts the goal has been to create a layout that would work on a Charybdis by Bastard Keyboards. See the cover picture for how the keys have been moved around to make the latest layout work on a normal keyboard.","title":"Keyboard Layouts"},{"content":"\u0026ldquo;st is a simple terminal implementation for X\u0026rdquo; - suckless.org.\nThis is my configuration of the suckless terminal st. I have installed a few different patches and made some configuration changes to improve the usability and look of the terminal.\nTry My Config To try my configuration on any system with Nix installed run the following:\nnix run github:jonwin1/st-jonwin Patches Srollback: Allow scrolling back through the terminal output using keybinds or the mouse wheel. st-scrollback-20210507-4536f46 st-scrollback-reflow-20230607-211964d st-scrollback-mouse-20220127-2c5edf2 st-scrollback-mouse-altscreen-20220127-2c5edf2 Boxdraw: Custom rendering of some characters for drawing of boxes etc. with gapless alignment. st-boxdraw-v2-0.8.5 Alpha st-alpha-20220206-0.8.5 Alpha Focus Highlight st-focus-20200731-patch_alpha Ligatures: Adds proper drawing of ligatures. A combination of st-ligatures-alpha-scrollback-0.9 and st-ligatures-boxdraw-0.9, see st-ligatures-boxdraw-alpha-scrollback-2024-04-24-0.9.diff Visual bell 2: Adds a small visual bell in the top right of the terminal. st-visualbell2-basic-2020-05-13-045a0fa st-visualbell2-enhanced-2020-05-13-045a0fa Newterm: Allows spawning a new st terminal with the same working directory as the current st instance. st-newterm-0.9 Copyurl: Allows copying URLs from the terminal with keybinds. st-copyurl-multiline-20230406-211964d Open copied url: Allows opening a url from the clipboard in a browser. st-openclipboard-20220217-0.8.5 Other Changes I have changed the font to FiraCode Nerd Font to add support for ligatures and nerd font icons. I have also changed the colors to colors from the Nord theme.\nKeybinds alt + c: Copy alt + v: Paste alt + k: Scroll up alt + j: Scroll down alt + u: Scroll up page alt + d: Scroll down page alt + shift + k: Zoom in alt + shift + j: Zoom out alt + shift + h: Zoom reset alt + l: Copy url above alt + shift + l: Copy url below alt + o: Open url in clipboard in default browser alt + shift + return: Spawn new terminal in current directory Mouse wheel scrolling is also added.\nInstalling Dependencies libX11 libXft libXinerama harfbuzz fira-code-nerdfont Note: On NixOS dependencies are automatically installed.\nNixOS Add the repository as an input in your flake.nix:\ninputs = { st = { url = \u0026quot;github:jonwin1/st-jonwin\u0026quot;; inputs.nixpkgs.follows = \u0026quot;nixpkgs\u0026quot;; }; }; Then add this to your configuration.nix:\nenvironment = { systemPackages = with pkgs; [ inputs.st.packages.\u0026quot;${system}\u0026quot;.default ]; }; Rebuild, switch and then you are done.\nTo update to a new version of the config just update the flake lock:\nnix flake lock --update-input st Other distros This should work for most other linux distrubituions and is taken from the st README.\nEdit config.mk to match your local setup (st is installed into the /usr/local namespace by default).\nAfterwards enter the following command to build and install st (if necessary as root):\nmake clean install ","permalink":"http://localhost:1313/posts/st/","summary":"\u0026ldquo;st is a simple terminal implementation for X\u0026rdquo; - suckless.org.\nThis is my configuration of the suckless terminal st. I have installed a few different patches and made some configuration changes to improve the usability and look of the terminal.\nTry My Config To try my configuration on any system with Nix installed run the following:\nnix run github:jonwin1/st-jonwin Patches Srollback: Allow scrolling back through the terminal output using keybinds or the mouse wheel.","title":"St (simple terminal)"},{"content":"I created this website to have a single place to document all my projects and share them. It will also serve as a kind of portfolio that shows what things I have worked on and learned.\nThis Website This website was build with Hugo which is a open-source static site generator, Hugo allows you to generate posts like this one from markdown files. I use the PaperMod theme for my site, it is a clean and simple theme with many useful features. I have made one simple modification to the theme which is to add a last modified date like described by Jackson Lucky. The date will only appear if the post has been modified since it was posted and it will automatically update using the files Git history to know when the post was last modified.\nCreate Your Own Website You could either clone my repo and modify it to fit your needs or follow this guide to create your own.\nUsing My Repo To use my repo as the base of your own website do the following:\ngit clone https://github.com/jonwin1/website cd website git submodule update --init --recursive # Clone submodules (the theme) hugo server -D # Start development server with drafts The pages are located in the /content/ directory with the exception of the home page which is configured in config.yml (I have chosen to change the hugo.toml to config.yml since many tutorials and examples I looked at used yaml and recommended it as easier to read). Once the server is started you can open the website at the address shown in the therminal, usually localhost:1313.\nIf you intend to use my repo for your own website I recommend removing all files from /content/posts/ and creating your own posts, then remove my pictures from /content/pictures.md and /static/ and replace them with your own. Lastly modify config.yml to use your own url, title, homepage content, logo, etc.\nFor more info on how to create posts and more view the Hugo documentation, some other good sources of information are the PaperMod wiki and this post by Jesse Wei.\nDeploying I have used Cloudflare Pages to deploy my website and I would recommend it to others since it is very easy and free. Cloudflare has a good guide on how to deploy a Hugo site using Cloudflare Pages, this guide also contain some instructions on how to create a hugo site.\nHosting your site this way is very simple because once it is configured you only need to push changes to your git repo and then the website will be updated with the changes automatically.\nIf you own a domain name you can configure your website to use this domain instead of the *.pages.dev address provided by Cloudflare, to to this follow this guide. If your domain is already managed by Cloudflare this is very easy and Cloudflare takes care of almost everything, otherwise you might have to add some DNS records manually.\n","permalink":"http://localhost:1313/posts/this-website/","summary":"I created this website to have a single place to document all my projects and share them. It will also serve as a kind of portfolio that shows what things I have worked on and learned.\nThis Website This website was build with Hugo which is a open-source static site generator, Hugo allows you to generate posts like this one from markdown files. I use the PaperMod theme for my site, it is a clean and simple theme with many useful features.","title":"This Website"},{"content":"2024 Rally Sweden Jumping into the Red Barn Arena\nMy Car My car, a BMW E46 330xi.\n","permalink":"http://localhost:1313/pictures/","summary":"2024 Rally Sweden Jumping into the Red Barn Arena\nMy Car My car, a BMW E46 330xi.","title":"Pictures"}]